/*
 * CodeCharacter API
 *
 * Specification of the CodeCharacter API
 *
 * The version of the OpenAPI document: 2022.0.1
 * Contact: delta@nitt.edu
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using CodeCharacter.CoreLibrary.Converters;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace CodeCharacter.CoreLibrary.Models;

/// <summary>
///     External Login request
/// </summary>
[DataContract]
public class ExternalLoginRequestDto : IEquatable<ExternalLoginRequestDto>
{
    /// <summary>
    ///     Gets or Sets Provider
    /// </summary>
    [TypeConverter(typeof(CustomEnumConverter<ProviderEnum>))]
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ProviderEnum
    {
        /// <summary>
        ///     Enum GOOGLE for GOOGLE
        /// </summary>
        [EnumMember(Value = "GOOGLE")] GOOGLE = 1,

        /// <summary>
        ///     Enum GITHUB for GITHUB
        /// </summary>
        [EnumMember(Value = "GITHUB")] GITHUB = 2
    }

    /// <summary>
    ///     Gets or Sets Provider
    /// </summary>
    [Required]
    [DataMember(Name = "provider", EmitDefaultValue = false)]
    public ProviderEnum Provider { get; set; }

    /// <summary>
    ///     Returns true if ExternalLoginRequestDto instances are equal
    /// </summary>
    /// <param name="other">Instance of ExternalLoginRequestDto to be compared</param>
    /// <returns>Boolean</returns>
    public bool Equals(ExternalLoginRequestDto other)
    {
        if (other is null) return false;
        if (ReferenceEquals(this, other)) return true;

        return
            Provider == other.Provider ||
            Provider.Equals(other.Provider);
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class ExternalLoginRequestDto {\n");
        sb.Append("  Provider: ").Append(Provider).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }

    /// <summary>
    ///     Returns true if objects are equal
    /// </summary>
    /// <param name="obj">Object to be compared</param>
    /// <returns>Boolean</returns>
    public override bool Equals(object obj)
    {
        if (obj is null) return false;
        if (ReferenceEquals(this, obj)) return true;
        return obj.GetType() == GetType() && Equals((ExternalLoginRequestDto)obj);
    }

    /// <summary>
    ///     Gets the hash code
    /// </summary>
    /// <returns>Hash code</returns>
    public override int GetHashCode()
    {
        unchecked // Overflow is fine, just wrap
        {
            var hashCode = 41;
            // Suitable nullity checks etc, of course :)

            hashCode = hashCode * 59 + Provider.GetHashCode();
            return hashCode;
        }
    }

    #region Operators

#pragma warning disable 1591

    public static bool operator ==(ExternalLoginRequestDto left, ExternalLoginRequestDto right)
    {
        return Equals(left, right);
    }

    public static bool operator !=(ExternalLoginRequestDto left, ExternalLoginRequestDto right)
    {
        return !Equals(left, right);
    }

#pragma warning restore 1591

    #endregion Operators
}