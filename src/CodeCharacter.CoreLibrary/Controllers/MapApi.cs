/*
 * CodeCharacter API
 *
 * Specification of the CodeCharacter API
 *
 * The version of the OpenAPI document: 2022.0.1
 * Contact: delta@nitt.edu
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Threading.Tasks;
using CodeCharacter.CoreLibrary.Attributes;
using CodeCharacter.CoreLibrary.Models;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;

namespace CodeCharacter.CoreLibrary.Controllers;

/// <summary>
/// </summary>
[ApiController]
public abstract class MapApiController : ControllerBase
{
    /// <summary>
    ///     Create map revision
    /// </summary>
    /// <remarks>Create map revision</remarks>
    /// <param name="createMapRevisionRequestDto"></param>
    /// <response code="204">No Content</response>
    /// <response code="401">Unauthorized</response>
    /// <response code="422">Unprocessable Entity</response>
    [HttpPost]
    [Route("/user/map/revisions")]
    [Authorize]
    [Consumes("application/json")]
    [ValidateModelState]
    public abstract Task<IActionResult> CreateMapRevision(
        [FromBody] CreateMapRevisionRequestDto createMapRevisionRequestDto);

    /// <summary>
    ///     Get latest map
    /// </summary>
    /// <remarks>Get latest map</remarks>
    /// <response code="200">OK</response>
    /// <response code="401">Unauthorized</response>
    [HttpGet]
    [Route("/user/map/latest")]
    [Authorize]
    [ValidateModelState]
    [ProducesResponseType(statusCode: 200, type: typeof(MapDto))]
    public abstract Task<IActionResult> GetLatestMap();

    /// <summary>
    ///     Get map revision by ID
    /// </summary>
    /// <remarks>Get map revision by ID</remarks>
    /// <param name="revisionId">ID of the code revision</param>
    /// <response code="200">OK</response>
    /// <response code="401">Unauthorized</response>
    /// <response code="404">Not Found</response>
    [HttpGet]
    [Route("/user/map/revisions/{revisionId}")]
    [Authorize]
    [ValidateModelState]
    [ProducesResponseType(statusCode: 200, type: typeof(MapRevisionDto))]
    public abstract Task<IActionResult> GetMapRevisionById([FromRoute(Name = "revisionId")] [Required] Guid revisionId);

    /// <summary>
    ///     Get map revisions
    /// </summary>
    /// <remarks>Get list of all map revision IDs</remarks>
    /// <response code="200">OK</response>
    /// <response code="401">Unauthorized</response>
    [HttpGet]
    [Route("/user/map/revisions")]
    [Authorize]
    [ValidateModelState]
    [ProducesResponseType(statusCode: 200, type: typeof(List<MapRevisionDto>))]
    public abstract Task<IActionResult> GetMapRevisions();

    /// <summary>
    ///     Update latest map
    /// </summary>
    /// <remarks>Update latest map</remarks>
    /// <param name="updateLatestMapRequestDto"></param>
    /// <response code="204">No Content</response>
    /// <response code="401">Unauthorized</response>
    /// <response code="422">Unprocessable Entity</response>
    [HttpPost]
    [Route("/user/map/latest")]
    [Authorize]
    [Consumes("application/json")]
    [ValidateModelState]
    public abstract Task<IActionResult> UpdateLatestMap([FromBody] UpdateLatestMapRequestDto updateLatestMapRequestDto);
}